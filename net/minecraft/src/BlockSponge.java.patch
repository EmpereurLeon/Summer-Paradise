--- a/net/minecraft/src/BlockSponge.java
+++ b/net/minecraft/src/BlockSponge.java
@@ -1,36 +1,41 @@
 package net.minecraft.src;
 
+import java.util.Random;
+
 public class BlockSponge extends Block {
 	protected BlockSponge(int i1) {
 		super(i1, Material.sponge);
 		this.blockIndexInTexture = 48;
 	}
 
-	public void onBlockAdded(World world1, int i2, int i3, int i4) {
-		byte b5 = 2;
+	private void clearSurroundingWater(World world, int startX, int startY, int startZ) {
+		int radius = 2;
+		int startXMinusRadius = startX - radius;
+		int startYMinusRadius = startY - radius;
+		int startZMinusRadius = startZ - radius;
+		int startXPlusRadius = startX + radius;
+		int startYPlusRadius = startY + radius;
+		int startZPlusRadius = startZ + radius;
 
-		for(int i6 = i2 - b5; i6 <= i2 + b5; ++i6) {
-			for(int i7 = i3 - b5; i7 <= i3 + b5; ++i7) {
-				for(int i8 = i4 - b5; i8 <= i4 + b5; ++i8) {
-					if(world1.getBlockMaterial(i6, i7, i8) == Material.water) {
-						;
+		for (int x = startXMinusRadius; x <= startXPlusRadius; ++x) {
+			for (int y = startYMinusRadius; y <= startYPlusRadius; ++y) {
+				for (int z = startZMinusRadius; z <= startZPlusRadius; ++z) {
+					int blockId = world.getBlockId(x, y, z);
+					if (blockId == Block.waterMoving.blockID || blockId == Block.waterStill.blockID) {
+						world.setBlockWithNotify(x, y, z, 0);
 					}
 				}
 			}
 		}
-
-	}
-
-	public void onBlockRemoval(World world1, int i2, int i3, int i4) {
-		byte b5 = 2;
-
-		for(int i6 = i2 - b5; i6 <= i2 + b5; ++i6) {
-			for(int i7 = i3 - b5; i7 <= i3 + b5; ++i7) {
-				for(int i8 = i4 - b5; i8 <= i4 + b5; ++i8) {
-					world1.notifyBlocksOfNeighborChange(i6, i7, i8, world1.getBlockId(i6, i7, i8));
-				}
-			}
-		}
-
+	}
+
+	public void onBlockAdded(World world, int x, int y, int z) {
+		super.onBlockAdded(world, x, y, z);
+		clearSurroundingWater(world, x, y, z);
+	}
+
+	public void updateTick(World world, int x, int y, int z, Random random) {
+		super.updateTick(world, x, y, z, random);
+		clearSurroundingWater(world, x, y, z);
 	}
 }
