--- a/net/minecraft/src/ChunkProviderGenerate.java
+++ b/net/minecraft/src/ChunkProviderGenerate.java
@@ -40,7 +40,7 @@
 		this.mobSpawnerNoise = new NoiseGeneratorOctaves(this.rand, 8);
 	}
 
-	public void generateTerrain(int i1, int i2, byte[] b3, BiomeGenBase[] biomeGenBase4, double[] d5) {
+	public void generateTerrain(int i1, int i2, short[] b3, BiomeGenBase[] biomeGenBase4, double[] d5) {
 		byte b6 = 4;
 		byte b7 = 64;
 		int i8 = b6 + 1;
@@ -110,7 +110,7 @@
 
 	}
 
-	public void replaceBlocksForBiome(int i1, int i2, byte[] b3, BiomeGenBase[] biomeGenBase4) {
+	public void replaceBlocksForBiome(int i1, int i2, short[] b3, BiomeGenBase[] biomeGenBase4) {
 		byte b5 = 64;
 		double d6 = 8.0D / 256D;
 		this.sandNoise = this.field_909_n.generateNoiseOctaves(this.sandNoise, (double)(i1 * 16), (double)(i2 * 16), 0.0D, 16, 16, 1, d6, d6, 1.0D);
@@ -132,7 +132,7 @@
 					if(i17 <= 0 + this.rand.nextInt(5)) {
 						b3[i18] = (byte)Block.bedrock.blockID;
 					} else {
-						byte b19 = b3[i18];
+						short b19 = b3[i18];
 						if(b19 == 0) {
 							i14 = -1;
 						} else if(b19 == Block.stone.blockID) {
@@ -192,7 +192,7 @@
 
 	public Chunk provideChunk(int i1, int i2) {
 		this.rand.setSeed((long)i1 * 341873128712L + (long)i2 * 132897987541L);
-		byte[] b3 = new byte[32768];
+		short[] b3 = new short[32768];
 		Chunk chunk4 = new Chunk(this.worldObj, b3, i1, i2);
 		this.biomesForGeneration = this.worldObj.getWorldChunkManager().loadBlockGeneratorData(this.biomesForGeneration, i1 * 16, i2 * 16, 16, 16);
 		double[] d5 = this.worldObj.getWorldChunkManager().temperature;
